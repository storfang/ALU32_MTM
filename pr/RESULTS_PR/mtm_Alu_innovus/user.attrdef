define_attribute state -data_type string -obj_type design -category design -help {Current state of the design. Possible value could be unplaced, placed, placed_routed, clock_synthesized or clock_synthesized_routed.} -compute_function {::um::get_design_state} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_autoload_applets -data_type bool -obj_type root -category flow -help {Enable auto loading of applets based on previous run data.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -hidden -quiet
define_attribute flow_autoload_dir -data_type string -obj_type root -category flow -help {Controls errors during auto reload of attributes.  Set to 'server' to continue.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {error} -hidden -quiet
define_attribute flow_branch -data_type string -obj_type root -category flow -help {Branch being run for a hierarchical flow.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_caller_data -data_type string -obj_type root -category flow -help {Data used by the caller of the tool to identify this flow.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_cla_enabled_features -data_type string -obj_type root -category flow -help {Flow enable features passed to init_flow.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_cla_inject_tcl -data_type string -obj_type root -category flow -help {Flow injection tcl passed to init_flow.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_current -data_type string -obj_type root -category flow -help {Flow to execute by default.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_current_cache -data_type string -obj_type root -category flow -help {Cache of currently running flow step.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_database_directory -data_type string -obj_type root -category flow -help {Flow directory where results databases are stored.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {dbs} -quiet
define_attribute flow_edit_wildcard_end_steps -data_type string -obj_type root -category flow -help {Edit_flow added objects to run after all steps.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_edit_wildcard_start_steps -data_type string -obj_type root -category flow -help {Edit_flow added objects to run before all steps.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_error_errorinfo -data_type string -obj_type root -category flow -help {Tcl error stack in error database.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_error_message -data_type string -obj_type root -category flow -help {Tcl error message in error database.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_error_write_db -data_type bool -obj_type root -category flow -help {Write a database when a flow step results in an error condition} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {true} -quiet
define_attribute flow_execute_in_global -data_type bool -obj_type root -category flow -help {Enable running in global namespace.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -hidden -quiet
define_attribute flow_exit_when_done -data_type bool -obj_type root -category flow -help {Exit after running final step.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -quiet
define_attribute flow_footer_tcl -data_type string -obj_type root -category flow -help {TCL script to run when a flow ends.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_header_tcl -data_type string -obj_type root -category flow -help {TCL script to run when a flow starts.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_hier_path -data_type string -obj_type root -category flow -help {Path of current flow within the flow hierarchy.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_history -data_type string -obj_type root -category flow -help {Complete flow run history.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_log_directory -data_type string -obj_type root -category flow -help {Flow directory where log files are stored.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {logs} -quiet
define_attribute flow_log_prefix_generator -data_type string -obj_type root -category flow -help {TCL script to create log filenames in Flow tool.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {
      set logPrefix $start_step
      # Work out the subset of steps we are running
      set startPath [split $start_step "."]
      set endPath [split $end_step "."]
      for {set i 0} {$i < [llength $startPath]} {incr i} {
        if {[lindex $startPath $i] ne [lindex $endPath $i]} {
          if {$subflow_start_step && $subflow_end_step} {
            set logPrefix [join [lrange $startPath 0 [expr $i - 1]] "."]
          } else {
            set logPrefix $start_step
            if {$i < [llength $endPath]} {
              set logPrefix "${logPrefix}-[join [lrange $endPath $i end] "."]"
            }
          }
          break
        }
      }
      # Add the branch name
      if {$branch ne {}} {
        if {$logPrefix eq {}} {
          set logPrefix $branch
        } else {
          set logPrefix "$branch.$logPrefix"
        }
      }
      # Add the top-level flow to the prefix
      if {$logPrefix eq {}} {
        set logPrefix [string range $flow 5 end]
      } else {
        set logPrefix "[string range $flow 5 end].$logPrefix"
      }
      # Fall back to tool name
      if {$logPrefix eq {}} {
        set logPrefix $tool
      }
      # Add the flow log directory
      set logPrefix [file join $flow_log_directory $logPrefix]
      return $logPrefix
    } -quiet
define_attribute flow_mail_on_error -data_type bool -obj_type root -category flow -help {Email to flow_mail_to if an error is detected.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -quiet
define_attribute flow_mail_to -data_type string -obj_type root -category flow -help {Email address where results are sent.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_metadata -data_type string -obj_type root -category flow -help {Cache of flow metadata.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_metrics_file -data_type string -obj_type root -category flow -help {Flow metrics file for reporting results.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_metrics_snapshot_parent_uuid -data_type string -obj_type root -category flow -help {The snapshot uuid the results from this flow will be appended to.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_metrics_snapshot_uuid -data_type string -obj_type root -category flow -help {The snapshot uuid of the most recent flow step executed.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_overwrite_database -data_type bool -obj_type root -category flow -help {Enables overwriting databases when saving.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -quiet
define_attribute flow_plugin_names -data_type string -obj_type root -category flow -help {Names of all internal plug-in points.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {
      Cadence.plugin.place.pre
      Cadence.plugin.place.post
      Cadence.plugin.prects.pre
      Cadence.plugin.prects.exp.mbff
      Cadence.plugin.prects.post
      Cadence.plugin.cts.pre
      Cadence.plugin.cts.post
      Cadence.plugin.postcts.pre
      Cadence.plugin.postcts.post
      Cadence.plugin.postcts.hold.pre
      Cadence.plugin.postcts.hold.post
      Cadence.plugin.route.pre
      Cadence.plugin.route.trackopt.pre
      Cadence.plugin.route.trackopt.hold.pre
      Cadence.plugin.route.trackopt.hold.post
      Cadence.plugin.route.trackopt.post
      Cadence.plugin.route.post
      Cadence.plugin.postroute.pre
      Cadence.plugin.postroute.hold.pre
      Cadence.plugin.postroute.hold.post
      Cadence.plugin.postroute.eco_route.pre
      Cadence.plugin.postroute.eco_route.post
      Cadence.plugin.postroute.recovery.pre
      Cadence.plugin.postroute.recovery.hold.pre
      Cadence.plugin.postroute.recovery.hold.post
      Cadence.plugin.postroute.recovery.eco_route.pre
      Cadence.plugin.postroute.recovery.eco_route.post
      Cadence.plugin.postroute.recovery.post
      Cadence.plugin.postroute.post
    } -quiet
define_attribute flow_plugin_steps -data_type string -obj_type root -category flow -help {List of plug-in steps that have been added through edit_flow.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_post_db_overwrite -data_type string -obj_type root -category flow -help {If set during a skip_db step, it allows the post db to be overwritten.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_print_run_information -data_type bool -obj_type root -category flow -help {Enables printing run information in the logfile.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -hidden -quiet
define_attribute flow_print_run_information_full -data_type bool -obj_type root -category flow -help {Prints memory and run information for each command into the logfile.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -hidden -quiet
define_attribute flow_report_directory -data_type string -obj_type root -category flow -help {Flow directory where reports are written.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {reports} -quiet
define_attribute flow_reset_time_after_flow_init -data_type bool -obj_type root -category flow -help {Reset all time measures after flow init.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -quiet
define_attribute flow_run_tag -data_type string -obj_type root -category flow -help {Tags for this particular flow run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_schedule -data_type string -obj_type root -category flow -help {Set of flows to execute after the current flow completes.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_script -data_type string -obj_type root -category flow -help {Script being executed by the flow tool.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_skip_auto_db_save -data_type bool -obj_type root -category flow -help {Skips automatic saving of database after every step.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {true} -hidden -quiet
define_attribute flow_skip_auto_generate_metrics -data_type bool -obj_type root -category flow -help {Skips automatic generation of metrics.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {false} -hidden -quiet
define_attribute flow_starting_db -data_type string -obj_type root -category flow -help {Starting database for the flow run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_status_file -data_type string -obj_type root -category flow -help {File for flow status.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_canonical_current -data_type string -obj_type root -category flow -help {Currently running canonical flow step.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_check_tcl -data_type string -obj_type root -category flow -help {Procedure to check the steps.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_current -data_type string -obj_type root -category flow -help {Currently running flow step.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_last -data_type string -obj_type root -category flow -help {Last flow step to have been completed.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_last_msg -data_type string -obj_type root -category flow -help {Message provided for the last step that was run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_last_number -data_type string -obj_type root -category flow -help {Unique number indicating the last step in the flow to be run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {0} -hidden -quiet
define_attribute flow_step_last_status -data_type string -obj_type root -category flow -help {Status for the last flow step run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {not_run} -quiet
define_attribute flow_step_next -data_type string -obj_type root -category flow -help {Next step to run in the flow.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_step_order -data_type string -obj_type root -category flow -help {Flow step order of execution.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_step_order_cache -data_type string -obj_type root -category flow -help {Cache of flow step order of execution.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_step_results_cache -data_type string -obj_type root -category flow -help {Cache of flow results.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute flow_summary_tcl -data_type string -obj_type root -category flow -help {TCL script to run during run_flow summary.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_template_feature_definition -data_type string -obj_type root -category flow -help {Features list and status for the current template.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_template_type -data_type string -obj_type root -category flow -help {Type of template being run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_template_version -data_type string -obj_type root -category flow -help {Version of the template being run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_user_templates -data_type string -obj_type root -category flow -help {Flow user template definitions.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -quiet
define_attribute flow_verbose -data_type bool -obj_type root -category flow -help {Enables printing run information in the logfile.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {true} -quiet
define_attribute flow_working_directory -data_type string -obj_type root -category flow -help {Flow directory where the flow is being run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {.} -quiet
define_attribute flow_write_db_args -data_type string -obj_type root -category flow -help {Arguments used for write_db.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {} -hidden -quiet
define_attribute run_count -data_type string -obj_type flow -category flow -help {Number of times this flow has been run.} -compute_function {} -set_function {} -check_function {} -reset_function {} -default_value {0} -quiet
